# -*- coding: utf-8 -*-
import config
import os
from flask import Flask, request
import telebot
import logging
from telebot import types
from SQLighter import SQLighter
import utils
from random import randint
import re
import sys
import uuid
import http.client
import urllib
from transliterate import translit, get_available_language_codes

bot = telebot.TeleBot(config.token)
db_worker = SQLighter()

@bot.message_handler(commands=['start'])
def handle_commands(message):
 print(str(message.chat.id))
 keyboard = types.InlineKeyboardMarkup()
 starting_button = types.InlineKeyboardButton(text="–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—Éüòä", callback_data="start_but",request_contact=True)
 keyboard.add(starting_button)
 bot.send_message(message.chat.id,"–ü—Ä–∏–≤—ñ—Çüéâ –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ Pravovykü§ì–Ø –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, —â–æ–± –¥–∞–≤–∞—Ç–∏ –ª—é–¥—è–º –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø—Ä–∞–≤–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—èüòä–¶—ñ–ª—å –º–æ–≥–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è - –∑—Ä–æ–±–∏—Ç–∏ —Ç–≤–æ—î –∂–∏—Ç—Ç—è –ø—Ä–æ—Å—Ç—ñ—à–∏–º —ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑ –ø–∏—Ç–∞–Ω–Ω—è–º–∏, –∑ —è–∫–∏–º–∏ —Ç–∏ —Å—Ç–∏–∫–∞—î—à—Å—è —â–æ–¥–Ω—èüòéüëåüèø. –©–æ–± –∑–Ω–∞–π—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤–∏–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É –ø—Ä–∞–≤–∞ –∑ –º–µ–Ω—é —ñ –¥–æ—Ç—Ä–∏–º—É–π—Å—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π. –Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞–π—à–æ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ,  —è–∫–∏–π –¥–∞—Å—Ç—å –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ç–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—èüôãüèº. –ö—Ä—ñ–º —Ü—å–æ–≥–æ, —Ç–∏ –º–æ–∂–µ—à —Å—Ç–µ–∂–∏—Ç–∏ –∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–º –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Ö, –∞ —Ç–∞–∫–æ–∂ –Ω–∞ —Å–∞–π—Ç—ñ. –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è —Å—Ç–∞–Ω—É —Ç–≤–æ—ó–º –∫–∏—à–µ–Ω—å–∫–æ–≤–∏–º –ø–æ–º—ñ—á–Ω–∏–∫–æ–º, —è–∫–∏–π –≤–∏—Ä—É—á–∏—Ç—å —É –ø–æ—Ç—Ä—ñ–±–Ω—É —Ö–≤–∏–ª–∏–Ω—Éüòå‚úäüèª. –©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é,–±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ–ª–∏—Å—è –∑—ñ –º–Ω–æ—é —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º –º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —â–æ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó‚ò∫Ô∏è",reply_markup = keyboard)



@bot.message_handler(func=lambda message: True, content_types=['text'])
def main_messages(message):
  text = message.text

  if text == "–û–±—Ä–∞—Ç–∏ —Å—Ñ–µ—Ä—Éüìã":
   row = db_worker.select_single(1)
     # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
   markup = utils.generate_markup(row[2])
   bot.send_message(message.chat.id,"–û–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É",reply_markup=markup)
   return
  elif text == "–ú–∏ –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Öü§ìü§≥":
   conn = http.client.HTTPConnection("www.google-analytics.com")
   conn.request("POST", "/collect", "v=1&tid=UA-100965704-2&cid=%s&t=pageview&dp=/socials"%str(message.chat.id))
   conn.close()
   keyboard = types.InlineKeyboardMarkup()
   instagram_button = types.InlineKeyboardButton(text="–ú–∏ –≤ Instagram", url="https://instagram.com/pravovyk")
   facebook_button = types.InlineKeyboardButton(text="–ú–∏ —É Facebook", url="http://fb.me/pravovyk")
   keyboard.add(instagram_button)
   keyboard.add(facebook_button)
   bot.send_message(message.chat.id,"–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –Ω–∞–º–∏ —É —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Ö, –¥—ñ–∑–Ω–∞–≤–∞–π—Ç–µ—Å—å –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –Ω–æ–≤–∏–Ω–∏ —É —Å–≤—ñ—Ç—ñ –ø—Ä–∞–≤–∞üìö –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ —Å—ñ–º'—î—é –ü—Ä–∞–≤–æ–≤–∏–∫—ñ–≤üë®‚Äçüë©‚Äçüëß‚Äçüë¶ —Ç–∞ —Å–∏—Ç—É–∞—Ü—ñ—ó, —É –∫–æ—Ç—Ä—ñ –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å —á–ª–µ–Ω–∏ —Å—ñ–º'—ó, —ñ –∑ —è–∫–∏–º–∏ –∑—ñ—à—Ç–æ–≤—Ö—É—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –∑ –Ω–∞—Å!üòé'",reply_markup = keyboard)
   return
  elif text == "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –¥—Ä—É–∑—è–º–∏üë•":
   conn = http.client.HTTPConnection("www.google-analytics.com")
   conn.request("POST", "/collect", "v=1&tid=UA-100965704-2&cid=%s&t=pageview&dp=/share"%str(message.chat.id))
   response = conn.getresponse()
   print(str(response.status))
   print(str(response.reason))
   conn.close()
   keyboard = types.InlineKeyboardMarkup()
   switch_button = types.InlineKeyboardButton(text="–û–±—Ä–∞—Ç–∏ –¥—Ä—É–≥–∞", switch_inline_query="–ö–∏—à–µ–Ω—å–∫–æ–≤–∏–π –±–æ—Ç-–ø—Ä–∞–≤–æ–≤–∏–∫ü§ì–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –º–æ—î —ñ–º'—è, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –±–µ—Å—ñ–¥—É –∑—ñ –º–Ω–æ—é‚ò∫Ô∏è")
   keyboard.add(switch_button)
   bot.send_message(message.chat.id,"–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É —Ç–∞ –æ–±–µ—Ä–∏ –¥—Ä—É–∑—ñ–≤, —â–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –Ω–∏–º–∏",reply_markup = keyboard)
   return
  try:
   row = db_worker.select_row("'"+text+"'")
   if row[2]:
    print('1')
    markup = utils.generate_markup(row[2])
    conn = http.client.HTTPConnection("www.google-analytics.com")
    emoji_pattern = re.compile("["
            u"\U0001F600-\U0001F64F"  # emoticons
            u"\U0001F300-\U0001F5FF"  # symbols & pictographs
            u"\U0001F680-\U0001F6FF"  # transport & map symbols
            u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
            u"\u200d"
            u"\u23f3"#‚è≥
            u"\u2642"#‚ôÇ
            u"\ufe0f"
            u"\u2699"#‚öôÔ∏è
            u"\U0001f913"
            u"\u2640"#‚ôÄ
            u"\u2019"
            u"\u2708"#‚úàÔ∏è
            u"\u2695"#‚öï
                               "]+", flags=re.UNICODE)
    gog_text = emoji_pattern.sub(r'', text)
    print(gog_text)
    conn.request("POST", "/collect", "v=1&tid=UA-100965704-2&cid=%s&t=pageview&dp=/%s"%(str(message.chat.id),translit(gog_text, 'uk',reversed=True)))
    conn.close()
    print("3")
    print(markup)
    bot.send_message(message.chat.id,row[1],reply_markup=markup)
   else:
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", url="https://t.me/andrei_bilyk")
    keyboard.add(url_button)
    bot.send_message(message.chat.id,row[1]+'''
   <b>–ù–µ –∑–Ω–∞–π—à–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å?</b>''',parse_mode='HTML',reply_markup = keyboard)
    bot.send_sticker(message.chat.id,"CAADAgADwgEAAi9e9g9yzglfrxXMpQI")
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç", url="http://pravovyk.com")
    keyboard.add(url_button)
    bot.send_message(message.chat.id,"–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –Ω–∞—Åüòé",reply_markup = keyboard)
   try:
    file_id = db_worker.select_file(text)
    bot.send_document(message.chat.id,file_id)
   except Exception:
    pass
  except BaseException as e:
   bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ,—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–µ –Ω–µ–º–∞,–º–∏ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ü–∏–º!"+str(e))

@bot.message_handler(content_types=["sticker"])
def sticker_sent(message):
 bot.send_message(message.chat.id, message.sticker.file_id)

@bot.message_handler(content_types=["document"])
def pdf_sent(message):
 print(message)
@bot.message_handler(content_types=["contact"])
def contact_sent(message):
 db_worker.user_create(message.contact.phone_number[-10:],message.from_user.first_name,message.from_user.last_name,str(message.chat.id))
 row = db_worker.select_single(1)
      # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
 markup = utils.generate_markup(row[2])
 msg = bot.send_message(message.chat.id,"–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æüòä–î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ –Ω–∞—à—É –±–µ—Å—ñ–¥—É!üòÉ –û–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É:",reply_markup = markup)

@bot.callback_query_handler(func=lambda call: True) #-----InlineKeyboardButton
def callback_inline(call):
    if call.message:
     row = db_worker.select_row("'"+call.data[-1]+"'")
     if row[2]:
      markup = utils.generate_markup(row[2],call.data)
      bot.send_message(call.message.chat.id,row[1],reply_markup=markup)





server = Flask(__name__)



@server.route("/bot", methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200


server.run(host="0.0.0.0", port=os.environ.get('PORT', 8443),threaded=True)
