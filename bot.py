# -*- coding: utf-8 -*-
import config
import os
from flask import Flask, request
import telebot
import logging
from telebot import types
from SQLighter import SQLighter
import utils
from random import randint
from smsclub import SMSer
import re
import sys
from User import User

bot = telebot.TeleBot(config.token)
user = User()
db_worker = SQLighter()

@bot.message_handler(commands=['start'])
def handle_commands(message):
 keyboard = types.InlineKeyboardMarkup()
 starting_button = types.InlineKeyboardButton(text="–†–æ–∑–ø–æ—á–∞—Ç–∏üòä", callback_data="start_but")
 keyboard.add(starting_button)
 bot.send_message(message.chat.id,"–ü—Ä–∏–≤—ñ—Çüéâ –ú–µ–Ω–µ –∑–≤–∞—Ç–∏ Pravovykü§ì–Ø –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π, —â–æ–± –¥–∞–≤–∞—Ç–∏ –ª—é–¥—è–º –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –ø—Ä–∞–≤–æ–≤—ñ –ø–∏—Ç–∞–Ω–Ω—èüòä–¶—ñ–ª—å –º–æ–≥–æ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è - –∑—Ä–æ–±–∏—Ç–∏ —Ç–≤–æ—î –∂–∏—Ç—Ç—è –ø—Ä–æ—Å—Ç—ñ—à–∏–º —ñ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Ç–æ–±—ñ –∑ –ø–∏—Ç–∞–Ω–Ω—è–º–∏, –∑ —è–∫–∏–º–∏ —Ç–∏ —Å—Ç–∏–∫–∞—î—à—Å—è —â–æ–¥–Ω—èüòéüëåüèø. –©–æ–± –∑–Ω–∞–π—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤–∏–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É –ø—Ä–∞–≤–∞ –∑ –º–µ–Ω—é —ñ –¥–æ—Ç—Ä–∏–º—É–π—Å—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π. –Ø–∫—â–æ —Ç–∏ –Ω–µ –∑–Ω–∞–π—à–æ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç–∏ –∑–∞–≤–∂–¥–∏ –º–æ–∂–µ—à –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ ,  —è–∫–∏–π –¥–∞—Å—Ç—å –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ç–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—èüôãüèº. –ö—Ä—ñ–º —Ü—å–æ–≥–æ, —Ç–∏ –º–æ–∂–µ—à —Å—Ç–µ–∂–∏—Ç–∏ –∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–º –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Ö, –∞ —Ç–∞–∫–æ–∂ –Ω–∞ —Å–∞–π—Ç—ñ. –°–ø–æ–¥—ñ–≤–∞—é—Å—è, —â–æ —è —Å—Ç–∞–Ω—É —Ç–≤–æ—ó–º –∫–∏—à–µ–Ω—å–∫–æ–≤–∏–º –ø–æ–º—ñ—á–Ω–∏–∫–æ–º, —è–∫–∏–π –≤–∏—Ä—É—á–∏—Ç—å —É –ø–æ—Ç—Ä—ñ–±–Ω—É —Ö–≤–∏–ª–∏–Ω—Éüòå‚úäüèª. –©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Å–ø—ñ–ª–∫—É–≤–∞—Ç–∏—Å—å –∑—ñ –º–Ω–æ—é –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—Éüëáüèª",reply_markup = keyboard)



@bot.message_handler(func=lambda message: True, content_types=['text'])
def main_messages(message):
 if user.verified == True:
  if not hasattr(main_messages, '_steps'):  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
   main_messages._steps = []
  text = message.text.encode('utf-8')
  if text == "–û–±—Ä–∞—Ç–∏ —Å—Ñ–µ—Ä—Éüìã":
   row = db_worker.select_single(1)
     # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
   markup = utils.generate_markup(row[2])
   markup.add("–ú–∏ –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Öü§ìü§≥")
   markup.add("–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –¥—Ä—É–∑—è–º–∏üë•")
   main_messages._steps = []
   bot.send_message(message.chat.id,"–û–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É",reply_markup=markup)
   return
  elif text == "–ù–∞–∑–∞–¥üîô":
   if len(main_messages._steps) >= 2:
    text = main_messages._steps[len(main_messages._steps)-2]
    main_messages._steps.remove(main_messages._steps[len(main_messages._steps)-1])
    main_messages._steps.remove(main_messages._steps[len(main_messages._steps)-2])
   elif len(main_messages._steps) < 2:
    row = db_worker.select_single(1)
      # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
    markup = utils.generate_markup(row[2])
    main_messages._steps = []
    bot.send_message(message.chat.id,"–û–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É",reply_markup=markup)
    return
  elif text == "–ú–∏ –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Öü§ìü§≥":
   keyboard = types.InlineKeyboardMarkup()
   instagram_button = types.InlineKeyboardButton(text="–ú–∏ –≤ Instagram", url="https://instagram.com/pravovyk")
   facebook_button = types.InlineKeyboardButton(text="–ú–∏ —É Facebook", url="http://fb.me/pravovyk")
   keyboard.add(instagram_button)
   keyboard.add(facebook_button)
   bot.send_message(message.chat.id,"–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –Ω–∞–º–∏ —É —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Ö, –¥—ñ–∑–Ω–∞–≤–∞–π—Ç–µ—Å—å –∫–æ–∂–Ω–æ–≥–æ –¥–Ω—è –Ω–æ–≤–∏–Ω–∏ —É —Å–≤—ñ—Ç—ñ –ø—Ä–∞–≤–∞üìö –°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ —Å—ñ–º'—î—é –ü—Ä–∞–≤–æ–≤–∏–∫—ñ–≤üë®‚Äçüë©‚Äçüëß‚Äçüë¶ —Ç–∞ —Å–∏—Ç—É–∞—Ü—ñ—ó, —É –∫–æ—Ç—Ä—ñ –ø–æ—Ç—Ä–∞–ø–ª—è—é—Ç—å —á–ª–µ–Ω–∏ —Å—ñ–º'—ó, —ñ –∑ —è–∫–∏–º–∏ –∑—ñ—à—Ç–æ–≤—Ö—É—î—Ç—å—Å—è –∫–æ–∂–µ–Ω –∑ –Ω–∞—Å!üòé'",reply_markup = keyboard)
   return
  elif text == "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –¥—Ä—É–∑—è–º–∏üë•":
   keyboard = types.InlineKeyboardMarkup()
   switch_button = types.InlineKeyboardButton(text="–û–±—Ä–∞—Ç–∏ –¥—Ä—É–≥–∞", switch_inline_query="–ö–∏—à–µ–Ω—å–∫–æ–≤–∏–π –±–æ—Ç-–ø—Ä–∞–≤–æ–≤–∏–∫ü§ì–ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –º–æ—î —ñ–º'—è, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –±–µ—Å—ñ–¥—É –∑—ñ –º–Ω–æ—é‚ò∫Ô∏è")
   keyboard.add(switch_button)
   bot.send_message(message.chat.id,"–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É —Ç–∞ –æ–±–µ—Ä–∏ –¥—Ä—É–∑—ñ–≤, —â–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –Ω–∏–º–∏",reply_markup = keyboard)
   return
  try:
   row = db_worker.select_row(text)
   if row[2]:
    markup = utils.generate_markup(row[2])
    markup.add("–û–±—Ä–∞—Ç–∏ —Å—Ñ–µ—Ä—Éüìã","–ù–∞–∑–∞–¥üîô")
    main_messages._steps.append(text)
    bot.send_message(message.chat.id,row[1],reply_markup=markup)
   else:
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü—ñ–¥–∫–ª—é—á–∏—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞", url="https://t.me/andrei_bilyk")
    keyboard.add(url_button)
    bot.send_message(message.chat.id,row[1]+'''
   <b>–ù–µ –∑–Ω–∞–π—à–ª–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å?</b>''',parse_mode='HTML',reply_markup = keyboard)
    bot.send_sticker(message.chat.id,"CAADAgADwAEAAi9e9g_X8nwrz1fTFwI")
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≤–µ–±-—Å–∞–π—Ç", url="http://pravovyk.com")
    keyboard.add(url_button)
    bot.send_message(message.chat.id,"–î—ñ–∑–Ω–∞–π—Ç–µ—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ –Ω–∞—Åüòé",reply_markup = keyboard)
   try:
    file_id = db_worker.select_file(text)
    bot.send_document(message.chat.id,file_id)
   except Exception:
    pass
  except BaseException as e:
   bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ,—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó —â–µ –Ω–µ–º–∞,–º–∏ –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–¥ —Ü–∏–º!")

@bot.message_handler(content_types=["sticker"])
def file_sent(message):
 bot.send_message(message.chat.id, message.sticker.file_id)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "start_but":
          # –ø–æ–∏—Å–∫ –≤ –±–∞–∑–µ
          user.verified = False
          msg = bot.send_message(call.message.chat.id,"–í–∏ —â–µ –Ω–µ –≤–µ—Ä–∏—Ñ—ñ–∫–æ–≤–∞–Ω—ñ —É —Å–µ—Ä–≤—ñ—Å—ñ pravovyk.com. –ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –í–∞—à –º–æ–±—ñ–ª—å–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, –Ω–∞ –Ω—å–æ–≥–æ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫–æ–¥ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó.–ö–∏—à–µ–Ω—å–∫–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ Pravovyk —î –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–º –ø—Ä–æ–¥—É–∫—Ç–æ–º —Å–µ—Ä–≤—ñ—Å—É pravovyk.com.")
          bot.register_next_step_handler(msg, sms_verification)
          return
        elif call.data == "code_one_more":
            try:
             number = str(randint(100000,999999))
             t = SMSer()
             t.send_text(message.text,"–í–∞—à –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: "+number)
             msg = bot.send_message(message.chat.id,"–í–∞—à –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π –Ω–∞ –Ω–æ–º–µ—Ä:"+message.text.encode('utf-8'))
             bot.register_next_step_handler(msg, code_verif)
            except BaseException as e:
             bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ, –≤–∏–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—ñ, –≤–∏–±–∞—á—Ç–µ –∑–∞ –Ω–µ–∑—Ä—É—É—á–Ω–æ—Å—Ç—ñ!"+str(e))

def sms_verification(message):
 number = str(randint(100000,999999))
 try:
  validate_mobile(message.text)
 except BaseException as e:
  msg = bot.send_message(message.chat.id,"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤–≤–µ–¥–µ–Ω–∏–π –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑")
  bot.register_next_step_handler(msg, sms_verification)
  return
 try:
  t = SMSer()
  print("1")
  t.send_text(message.text.encode('utf-8'),("–í–∞—à –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó: "+number).encode('utf-8'))
  print("sent")
  msg = bot.send_message(message.chat.id,"–í–∞—à –∫–æ–¥ –¥–ª—è –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π –Ω–∞ –Ω–æ–º–µ—Ä:"+message.text.encode('utf-8'))
  bot.register_next_step_handler(msg, code_verif)
  user.setCode(number)
  user.setPhone(message.text)
 except BaseException as e:
  bot.send_message(message.chat.id,"–í–∏–±–∞—á—Ç–µ, –≤–∏–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –Ω–µ—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—ñ, –≤–∏–±–∞—á—Ç–µ –∑–∞ –Ω–µ–∑—Ä—É—É—á–Ω–æ—Å—Ç—ñ!"+str(e))

def validate_mobile(value):

    rule = re.compile(r'^(?:\+?38)?[0]\d{9,11}$')

    if not rule.search(value):
        raise BaseException

def code_verif(message):
 if message.text.encode('utf-8') == user.code:
  row = db_worker.select_single(1)
       # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ç–∫—É
  markup = utils.generate_markup(row[2])
  markup.add("–ú–∏ –≤ —Å–æ—Ü.–º–µ—Ä–µ–∂–∞—Öü§ìü§≥")
  markup.add("–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∑ –¥—Ä—É–∑—è–º–∏üë•")
  user.verified = True
  msg = bot.send_message(message.chat.id,"–í–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æüòä–î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æ –Ω–∞—à—É –±–µ—Å—ñ–¥—É?üòÉ –û–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É:",reply_markup = markup)
  bot.register_next_step_handler(msg,main_messages)
 else:
  keyboard = types.InlineKeyboardMarkup()
  starting_button = types.InlineKeyboardButton(text="–ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∫–æ–¥ —â–µ —Ä–∞–∑", callback_data="code_one_more")
  keyboard.add(starting_button)
  bot.send_message(message.chat.id,"–ö–æ–¥ –≤–µ—Ä–∏—Ñ—ñ–∫–∞—Ü—ñ—ó - –Ω–µ–≤—ñ—Ä–Ω–∏–πüôà",reply_markup = keyboard)

server = Flask(__name__)

@server.route("/bot", methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200


server.run(host="0.0.0.0", port=os.environ.get('PORT', 8443))
