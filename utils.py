# -*- coding: utf-8 -*-
from SQLighter import SQLighter
from telebot import types
import random
import re

def generate_markup_keyboard(answers):
    """
    –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
    :param right_answer: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    :param wrong_answers: –ù–∞–±–æ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    :return: –û–±—ä–µ–∫—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    print("start_keyboard")
    markup = types.ReplyKeyboardMarkup()
    # –°–∫–ª–µ–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏
    list_items = []
    for item in answers.split(','):
        list_items.append(item)
    # –•–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–µ—Ä–µ–º–µ—à–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    #random.shuffle(list_items)
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    for item in list_items:
        markup.add(item)

    return markup

def generate_markup(answers,callback):
    """
    –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
    :param right_answer: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    :param wrong_answers: –ù–∞–±–æ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
    :return: –û–±—ä–µ–∫—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    """
    emoji_pattern = re.compile("["
            u"\U0001F600-\U0001F64F"  # emoticons
            u"\U0001F300-\U0001F5FF"  # symbols & pictographs
            u"\U0001F680-\U0001F6FF"  # transport & map symbols
            u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
            u"\u200d"
            u"\u23f3"#‚è≥
            u"\u2642"#‚ôÇ
            u"\ufe0f"
            u"\u2699"#‚öôÔ∏è
            u"\U0001f913"
            u"\u2640"#‚ôÄ
            u"\u2019"
            u"\u2708"#‚úàÔ∏è
            u"\u2695"#‚öï
            u"\U0001F914"
            u"\u2716"
                               "]+", flags=re.UNICODE)
    markup = types.InlineKeyboardMarkup()
    # –°–∫–ª–µ–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏
    list_items = []
    for item in answers.split(','):
        list_items.append(item)
    # –•–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–µ—Ä–µ–º–µ—à–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    #random.shuffle(list_items)
    # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    i = 0
    for item in list_items:
        i += 1
        if (len(callback + str(i)) <= 2) or (callback + str(i) == '111') or (callback + str(i) == '112') or (callback + str(i) == '113') or (callback + str(i) == '264'):
         but = types.InlineKeyboardButton(text = item,callback_data = callback + str(i))
        else:
         if(len(item)<24):
          print(emoji_pattern.sub(r'', item))
          but = types.InlineKeyboardButton(text = item,callback_data = emoji_pattern.sub(r'', item))
         else:
          print(emoji_pattern.sub(r'', item))
          but =  types.InlineKeyboardButton(text = item,callback_data = emoji_pattern.sub(r'', item[:-24]))
        markup.add(but)
    if len(callback)>1:
     but = types.InlineKeyboardButton(text = "–ù–∞–∑–∞–¥üîô",callback_data = callback[:-1])
     markup.add(but)
    return markup
